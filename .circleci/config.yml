version: 2

variables:
  restore_cache: &restore_cache
    restore_cache:
      keys:
        - bioconda-utils-{{
            checksum ".circleci/common.sh" }}-{{
            checksum ".circleci/setup.sh" }}-{{
            checksum ".circleci/config.yml" }}-{{
            checksum "bioconda_utils/bioconda_utils-requirements.txt" }}-{{
            arch }}
  save_cache: &save_cache
    save_cache:
      key: bioconda-utils-{{
             checksum ".circleci/common.sh" }}-{{
             checksum ".circleci/setup.sh" }}-{{
             checksum ".circleci/config.yml" }}-{{
             checksum "bioconda_utils/bioconda_utils-requirements.txt" }}-{{
             arch }}
      paths:
        - miniconda
  common: &common
    run:
      name: Download common definitions
      command: curl -s https://raw.githubusercontent.com/bioconda/bioconda-common/master/common.sh > .circleci/common.sh
  setup: &setup
    run:
      name: Setup dependencies
      command: .circleci/setup.sh
  macos: &macos
    macos:
      xcode: "8.3.3"
  linux: &linux
    machine: true
  install_bioconda_utils: &install_bioconda_utils
    run:
      name: Install bioconda-utils
      command: python setup.py install
  autobump_run: &autobump_run
    name: Check recipes for new upstream releases
    command: |
      git clone git@github.com:bioconda/bioconda-recipes
      cd bioconda-recipes
      git config user.name "Autobump"
      git config user.email "bioconda@users.noreply.github.com"
      mkdir -p /tmp/artifacts
      bioconda-utils autobump recipes/ config.yml \
        --unparsed-urls /tmp/artifacts/unparsed_urls.txt \
        --failed-urls /tmp/artifacts/failed_urls.txt \
        --recipe-status /tmp/artifacts/status.txt \
        --create-pr $AUTOBUMP_OPTS


    
jobs:
  test-linux:
    <<: *linux
    steps:
      - checkout
      - *common
      - *restore_cache
      - *setup
      - *save_cache
      - *install_bioconda_utils
      - run:
          name: Testing
          command: py.test --duration=0 test/ -v --tb=native -m 'not long_running'
          no_output_timeout: 1200
  test-linux (long_running):
    <<: *linux
    steps:
      - checkout
      - *common
      - *restore_cache
      - *setup
      - *save_cache
      - *install_bioconda_utils
      - run:
          name: Testing
          command: py.test --duration=0 test/ -v --tb=native -m 'long_running'
          no_output_timeout: 1200
  test-macos:
    <<: *macos
    steps:
      - checkout
      - *common
      - *restore_cache
      - *setup
      - *save_cache
      - *install_bioconda_utils
      - run:
          name: Testing
          command: py.test --duration=0 test/ -v -k "not docker" --tb=native
          no_output_timeout: 1200
  build-docs:
    <<: *linux
    steps:
      - add_ssh_keys:
          fingerprints:
            - f8:26:86:86:f8:d3:a5:66:ea:7d:f6:42:2e:5c:7a:82
      - checkout
      - *common
      - *restore_cache
      - *setup
      - *save_cache
      - *install_bioconda_utils
      - run:
          name: Build and upload docs
          command: .circleci/build-docs.sh
  autobump-test:
    <<: *linux
    steps:
      - checkout
      - *common
      - *restore_cache
      - *setup
      - *save_cache
      - *install_bioconda_utils
      - run:
          <<: *autobump_run
          environment:
            AUTOBUMP_OPTS: --dry-run
      - store_artifacts:
          path: /tmp/artifacts
  autobump:
    <<: *linux
    steps:
      - checkout
      - *common
      - *restore_cache
      - *setup
      - *save_cache
      - *install_bioconda_utils
      - run:
          <<: *autobump_run
          environment:
            AUTOBUMP_OPTS: ""
      - store_artifacts:
          path: /tmp/artifacts



workflows:
  version: 2
  # workflow for testing pushes and PRs
  bioconda-utils-test:
    jobs:
      - test-linux:
          context: org-global
      - test-linux (long_running):
          context: org-global
      - test-macos:
          context: org-global
      - build-docs:
          context: org-global
      - autobump-test:
          context: org-global
  bioconda-utils-nightly:
     triggers:
       - schedule:
           cron: "0 0 * * *"
           filters:
             branches:
               only:
                 - master
     jobs:
       - autobump:
           context: org-global
       - build-docs:
           context: org-global
