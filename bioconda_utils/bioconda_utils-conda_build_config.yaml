# Bioconda's supported python versions are described
# in ../docs/source/user/versions.rst
# so please keep that documentation up to date as they change

# Additional bioconda-specific pinnings to use in addition to those specified
# in
# https://github.com/conda-forge/conda-forge-pinning-feedstock/blob/master/recipe/conda_build_config.yaml

# clear hard-coded default value for CONDA_BUILD_SYSROOT
CONDA_BUILD_SYSROOT:
  - ""
MACOSX_DEPLOYMENT_TARGET:      # [osx]
  - 11.0                       # [osx and arm64]
  - 10.9                       # [osx and x86_64]

pin_run_as_build:
  htslib:
    max_pin: x.x
  bamtools:
    max_pin: x.x.x
  r-base:
    max_pin: x.x
    min_pin: x.x

bamtools:
  - "2.5.1"

# NOTE: Workaround https://github.com/conda/conda-build/issues/3974 we slightly alter the values
#       from conda-forge-pinnings here (inserting '.*' or ' ' which should be ignored later on).
r_base:
  - "4.2.*"
  - "4.3.*"

# Note: this is a (hopefully) temporary fix for the r-base 4.3 migration. That package was built 
# with libxml2 2.11, but that migration on conda-forge isn't yet complete. Consequently conda-forge-pinning
# still has libxml2 2.10. That means that there are a number of R and Bioconductor packages we can't currently
# build without manually changing out libxml2 pinning.
libxml2:
  - "2.11.*"

python:
  - 3.10.*  *_cpython
  - 3.9.*  *_cpython
  - 3.8.*  *_cpython

# conda-forge only has 3 python versions, so we need to modify the length of the other zip_keys in its group
python_impl:
  - cpython
  - cpython
  - cpython

# Warning! This needs to both match the length of python and python_impl but ALSO match what conda-forge is using/has used!
numpy:
  - 1.21.*
  - 1.21.*
  - 1.21.*

# Warning! This needs to both match the length of python and python_impl but ALSO match what conda-forge is using/has used!
numpy:
  - 1.21.*
  - 1.21.*
  - 1.21.*

channel_sources:
  - hcc,conda-forge,bioconda,defaults

channel_targets:
  - hcc main

# HCC specific packages
cuda_driver:
  - 460.67  # [linux]
cuda_compiler_version:
  - 11.4  # [linux]
cudnn:
  - 8  # [linux]
cudatoolkit:
  - 11.4  # [linux]
zip_keys:
- - cuda_compiler_version  # [linux]
  - cudnn                  # [linux]

mro:
  - 3.5

pin_run_as_build:
  mro:
    min_pin: x.x.x
    max_pin: x.x
  cuda_driver:          # [linux]
    max_pin: x.x        # [linux]
  cudatoolkit:          # [linux]
    max_pin: x.x        # [linux]
  cudnn:                # [linux]
    max_pin: x.x.x      # [linux]

# be a little more specific and use 4.1
openmpi:
  - 4.1.*

oneapi_c_compiler:
  - icc
oneapi_cxx_compiler:
  - icpc
oneapi_fortran_compiler:
  - ifort
oneapi_c_compiler_version:
  - 2021
oneapi_cxx_compiler_version:
  - 2021
oneapi_fortran_compiler_version:
  - 2021
